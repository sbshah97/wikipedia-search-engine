[project]
name = "wikipedia-search-engine"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi>=0.116.1",
    "python-multipart>=0.0.20",
    "uvicorn[standard]>=0.35.0",
]

[dependency-groups]
dev = [
    "mypy>=1.17.0",
    "ruff>=0.12.7",
    "pytest>=8.0.0",
    "httpx>=0.27.0",
    "pytest-asyncio>=0.24.0",
]

[tool.ruff]
# Same as Black - line length of 88
line-length = 88
# Target Python 3.13+
target-version = "py313"

# Exclude common directories
exclude = [
    ".bzr",
    ".direnv", 
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.ruff.lint]
# Comprehensive rule sets for modern Python
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort (import sorting)
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ANN", # flake8-annotations
    "PIE", # flake8-pie
    "T20", # flake8-print
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "RUF", # Ruff-specific rules
]

ignore = [
    "E501",   # line too long (handled by formatter)
    "ANN204", # missing return type annotation for special method
]

# Per-file ignores
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__.py
"tests/*" = ["ANN"]       # no type annotations required in tests

[tool.ruff.lint.isort]
# FastAPI-specific import ordering
known-first-party = ["app"]
case-sensitive = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
# Python version
python_version = "3.13"

# Strict mode settings
strict = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true

# Import handling
ignore_missing_imports = true
follow_imports = "silent"

# Error reporting
show_error_codes = true
show_column_numbers = true
show_error_context = true

# Cache
cache_dir = ".mypy_cache"

# FastAPI specific settings
plugins = []

# Per-module overrides
[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
# Test discovery
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Output options
addopts = [
    "-v",                    # verbose output
    "--tb=short",           # shorter traceback format
    "--strict-markers",     # strict marker usage
    "--strict-config",      # strict config usage
    "--color=yes",          # colored output
]

# Async support
asyncio_mode = "auto"

# Markers
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Minimum version
minversion = "8.0"
